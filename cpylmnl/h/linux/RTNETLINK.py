# Generated by h2py from ./h/linux/rtnetlink.h

from __future__ import absolute_import

RTNL_FAMILY_IPMR = 128
RTNL_FAMILY_IP6MR = 129
RTNL_FAMILY_MAX = 129
RTM_BASE = 16
RTM_NEWLINK = 16
RTM_DELLINK = 17
RTM_GETLINK = 18
RTM_SETLINK = 19
RTM_NEWADDR = 20
RTM_DELADDR = 21
RTM_GETADDR = 22
RTM_NEWROUTE = 24
RTM_DELROUTE = 25
RTM_GETROUTE = 26
RTM_NEWNEIGH = 28
RTM_DELNEIGH = 29
RTM_GETNEIGH = 30
RTM_NEWRULE = 32
RTM_DELRULE = 33
RTM_GETRULE = 34
RTM_NEWQDISC = 36
RTM_DELQDISC = 37
RTM_GETQDISC = 38
RTM_NEWTCLASS = 40
RTM_DELTCLASS = 41
RTM_GETTCLASS = 42
RTM_NEWTFILTER = 44
RTM_DELTFILTER = 45
RTM_GETTFILTER = 46
RTM_NEWACTION = 48
RTM_DELACTION = 49
RTM_GETACTION = 50
RTM_NEWPREFIX = 52
RTM_GETMULTICAST = 58
RTM_GETANYCAST = 62
RTM_NEWNEIGHTBL = 64
RTM_GETNEIGHTBL = 66
RTM_SETNEIGHTBL = 67
RTM_NEWNDUSEROPT = 68
RTM_NEWADDRLABEL = 72
RTM_DELADDRLABEL = 73
RTM_GETADDRLABEL = 74
RTM_GETDCB = 78
RTM_SETDCB = 79
RTM_NEWNETCONF = 80
RTM_GETNETCONF = 82
RTM_NEWMDB = 84
RTM_DELMDB = 85
RTM_GETMDB = 86
__RTM_MAX = 87
RTM_MAX = (((__RTM_MAX + 3) & ~3) - 1)
RTM_NR_MSGTYPES = (RTM_MAX + 1 - RTM_BASE)
RTM_NR_FAMILIES = (RTM_NR_MSGTYPES >> 2)
def RTM_FAM(cmd): return (((cmd) - RTM_BASE) >> 2)

RTA_ALIGNTO = 4
def RTA_ALIGN(len): return ( ((len)+RTA_ALIGNTO-1) & ~(RTA_ALIGNTO-1) )

# H2PY_ERR: ./h/linux/rtnetlink.h - macro: def RTA_LENGTH(len): return (RTA_ALIGN(sizeof(struct rtattr)) + (len))
def RTA_SPACE(len): return RTA_ALIGN(RTA_LENGTH(len))

# H2PY_ERR: ./h/linux/rtnetlink.h - macro: def RTA_DATA(rta): return ((void*)(((char*)(rta)) + RTA_LENGTH(0)))
# H2PY_ERR: ./h/linux/rtnetlink.h - macro: def RTA_PAYLOAD(rta): return ((int)((rta)->rta_len) - RTA_LENGTH(0))
RTN_UNSPEC = 0
RTN_UNICAST = 1
RTN_LOCAL = 2
RTN_BROADCAST = 3
send = 4
RTN_ANYCAST = 5
but = 6
RTN_MULTICAST = 7
RTN_BLACKHOLE = 8
RTN_UNREACHABLE = 9
RTN_PROHIBIT = 10
RTN_THROW = 11
RTN_NAT = 12
RTN_XRESOLVE = 13
__RTN_MAX = 14
RTN_MAX = (__RTN_MAX - 1)
RTPROT_UNSPEC = 0
RTPROT_REDIRECT = 1
RTPROT_KERNEL = 2
RTPROT_BOOT = 3
RTPROT_STATIC = 4
RTPROT_GATED = 8
RTPROT_RA = 9
RTPROT_MRT = 10
RTPROT_ZEBRA = 11
RTPROT_BIRD = 12
RTPROT_DNROUTED = 13
RTPROT_XORP = 14
RTPROT_NTK = 15
RTPROT_DHCP = 16
RTPROT_MROUTED = 17
RT_SCOPE_UNIVERSE = 0
RT_SCOPE_SITE = 200
RT_SCOPE_LINK = 253
RT_SCOPE_HOST = 254
RT_SCOPE_NOWHERE = 255
RTM_F_NOTIFY = 0x100
RTM_F_CLONED = 0x200
RTM_F_EQUALIZE = 0x400
RTM_F_PREFIX = 0x800
RT_TABLE_UNSPEC = 0
RT_TABLE_COMPAT = 252
RT_TABLE_DEFAULT = 253
RT_TABLE_MAIN = 254
RT_TABLE_LOCAL = 255
RT_TABLE_MAX = 0xFFFFFFFF
RTA_UNSPEC = 0
RTA_DST = 1
RTA_SRC = 2
RTA_IIF = 3
RTA_OIF = 4
RTA_GATEWAY = 5
RTA_PRIORITY = 6
RTA_PREFSRC = 7
RTA_METRICS = 8
RTA_MULTIPATH = 9
RTA_PROTOINFO = 10
RTA_FLOW = 11
RTA_CACHEINFO = 12
RTA_SESSION = 13
RTA_MP_ALGO = 14
RTA_TABLE = 15
RTA_MARK = 16
RTA_MFC_STATS = 17
__RTA_MAX = 18
RTA_MAX = (__RTA_MAX - 1)
# H2PY_ERR: ./h/linux/rtnetlink.h - macro: def RTM_RTA(r): return ((struct rtattr*)(((char*)(r)) + NLMSG_ALIGN(sizeof(struct rtmsg))))
# H2PY_ERR: ./h/linux/rtnetlink.h - macro: def RTM_PAYLOAD(n): return NLMSG_PAYLOAD(n,sizeof(struct rtmsg))
RTNH_F_DEAD = 1
RTNH_F_PERVASIVE = 2
RTNH_F_ONLINK = 4
RTNH_ALIGNTO = 4
def RTNH_ALIGN(len): return ( ((len)+RTNH_ALIGNTO-1) & ~(RTNH_ALIGNTO-1) )

# H2PY_ERR: ./h/linux/rtnetlink.h - macro: def RTNH_NEXT(rtnh): return ((struct rtnexthop*)(((char*)(rtnh)) + RTNH_ALIGN((rtnh)->rtnh_len)))
# H2PY_ERR: ./h/linux/rtnetlink.h - macro: def RTNH_LENGTH(len): return (RTNH_ALIGN(sizeof(struct rtnexthop)) + (len))
def RTNH_SPACE(len): return RTNH_ALIGN(RTNH_LENGTH(len))

# H2PY_ERR: ./h/linux/rtnetlink.h - macro: def RTNH_DATA(rtnh): return ((struct rtattr*)(((char*)(rtnh)) + RTNH_LENGTH(0)))
RTNETLINK_HAVE_PEERINFO = 1
RTAX_UNSPEC = 0
RTAX_LOCK = 1
RTAX_MTU = 2
RTAX_WINDOW = 3
RTAX_RTT = 4
RTAX_RTTVAR = 5
RTAX_SSTHRESH = 6
RTAX_CWND = 7
RTAX_ADVMSS = 8
RTAX_REORDERING = 9
RTAX_HOPLIMIT = 10
RTAX_INITCWND = 11
RTAX_FEATURES = 12
RTAX_RTO_MIN = 13
RTAX_INITRWND = 14
RTAX_QUICKACK = 15
__RTAX_MAX = 16
RTAX_MAX = (__RTAX_MAX - 1)
RTAX_FEATURE_ECN = 0x00000001
RTAX_FEATURE_SACK = 0x00000002
RTAX_FEATURE_TIMESTAMP = 0x00000004
RTAX_FEATURE_ALLFRAG = 0x00000008
# H2PY_ERR: ./h/linux/rtnetlink.h - define: PREFIX_MAX = (__PREFIX_MAX - 1)
TCA_UNSPEC = 0
TCA_KIND = 1
TCA_OPTIONS = 2
TCA_STATS = 3
TCA_XSTATS = 4
TCA_RATE = 5
TCA_FCNT = 6
TCA_STATS2 = 7
TCA_STAB = 8
__TCA_MAX = 9
TCA_MAX = (__TCA_MAX - 1)
# H2PY_ERR: ./h/linux/rtnetlink.h - macro: def TCA_RTA(r): return ((struct rtattr*)(((char*)(r)) + NLMSG_ALIGN(sizeof(struct tcmsg))))
# H2PY_ERR: ./h/linux/rtnetlink.h - macro: def TCA_PAYLOAD(n): return NLMSG_PAYLOAD(n,sizeof(struct tcmsg))
NDUSEROPT_UNSPEC = 0
NDUSEROPT_SRCADDR = 1
__NDUSEROPT_MAX = 2
NDUSEROPT_MAX = (__NDUSEROPT_MAX - 1)
RTMGRP_LINK = 1
RTMGRP_NOTIFY = 2
RTMGRP_NEIGH = 4
RTMGRP_TC = 8
RTMGRP_IPV4_IFADDR = 0x10
RTMGRP_IPV4_MROUTE = 0x20
RTMGRP_IPV4_ROUTE = 0x40
RTMGRP_IPV4_RULE = 0x80
RTMGRP_IPV6_IFADDR = 0x100
RTMGRP_IPV6_MROUTE = 0x200
RTMGRP_IPV6_ROUTE = 0x400
RTMGRP_IPV6_IFINFO = 0x800
RTMGRP_DECnet_IFADDR = 0x1000
RTMGRP_DECnet_ROUTE = 0x4000
RTMGRP_IPV6_PREFIX = 0x20000
RTNLGRP_NONE = 0
RTNLGRP_LINK = 1
RTNLGRP_NOTIFY = 2
RTNLGRP_NEIGH = 3
RTNLGRP_TC = 4
RTNLGRP_IPV4_IFADDR = 5
RTNLGRP_IPV4_MROUTE = 6
RTNLGRP_IPV4_ROUTE = 7
RTNLGRP_IPV4_RULE = 8
RTNLGRP_IPV6_IFADDR = 9
RTNLGRP_IPV6_MROUTE = 10
RTNLGRP_IPV6_ROUTE = 11
RTNLGRP_IPV6_IFINFO = 12
RTNLGRP_DECnet_IFADDR = 13
RTNLGRP_NOP2 = 14
RTNLGRP_DECnet_ROUTE = 15
RTNLGRP_DECnet_RULE = 16
RTNLGRP_NOP4 = 17
RTNLGRP_IPV6_PREFIX = 18
RTNLGRP_IPV6_RULE = 19
RTNLGRP_ND_USEROPT = 20
RTNLGRP_PHONET_IFADDR = 21
RTNLGRP_PHONET_ROUTE = 22
RTNLGRP_DCB = 23
RTNLGRP_IPV4_NETCONF = 24
RTNLGRP_IPV6_NETCONF = 25
RTNLGRP_MDB = 26
__RTNLGRP_MAX = 27
RTNLGRP_MAX = (__RTNLGRP_MAX - 1)
# H2PY_ERR: ./h/linux/rtnetlink.h - macro: def TA_RTA(r): return ((struct rtattr*)(((char*)(r)) + NLMSG_ALIGN(sizeof(struct tcamsg))))
# H2PY_ERR: ./h/linux/rtnetlink.h - macro: def TA_PAYLOAD(n): return NLMSG_PAYLOAD(n,sizeof(struct tcamsg))
TCA_ACT_TAB = 1
TCAA_MAX = 1
RTEXT_FILTER_VF = (1 << 0)
RTEXT_FILTER_BRVLAN = (1 << 1)
