# Generated by h2py from ./h/linux/netlink.h

from __future__ import absolute_import

NETLINK_ROUTE = 0
NETLINK_UNUSED = 1
NETLINK_USERSOCK = 2
NETLINK_FIREWALL = 3
NETLINK_SOCK_DIAG = 4
NETLINK_NFLOG = 5
NETLINK_XFRM = 6
NETLINK_SELINUX = 7
NETLINK_ISCSI = 8
NETLINK_AUDIT = 9
NETLINK_FIB_LOOKUP = 10
NETLINK_CONNECTOR = 11
NETLINK_NETFILTER = 12
NETLINK_IP6_FW = 13
NETLINK_DNRTMSG = 14
NETLINK_KOBJECT_UEVENT = 15
NETLINK_GENERIC = 16
NETLINK_SCSITRANSPORT = 18
NETLINK_ECRYPTFS = 19
NETLINK_RDMA = 20
NETLINK_CRYPTO = 21
NETLINK_INET_DIAG = NETLINK_SOCK_DIAG
MAX_LINKS = 32
NLM_F_REQUEST = 1
NLM_F_MULTI = 2
NLM_F_ACK = 4
NLM_F_ECHO = 8
NLM_F_DUMP_INTR = 16
NLM_F_ROOT = 0x100
NLM_F_MATCH = 0x200
NLM_F_ATOMIC = 0x400
NLM_F_DUMP = (NLM_F_ROOT|NLM_F_MATCH)
NLM_F_REPLACE = 0x100
NLM_F_EXCL = 0x200
NLM_F_CREATE = 0x400
NLM_F_APPEND = 0x800
# H2PY_ERR: ./h/linux/netlink.h - define: NLMSG_ALIGNTO = 4U
def NLMSG_ALIGN(len): return ( ((len)+NLMSG_ALIGNTO-1) & ~(NLMSG_ALIGNTO-1) )

# H2PY_ERR: ./h/linux/netlink.h - define: NLMSG_HDRLEN = ((int) NLMSG_ALIGN(sizeof(struct nlmsghdr)))
def NLMSG_LENGTH(len): return ((len) + NLMSG_HDRLEN)

def NLMSG_SPACE(len): return NLMSG_ALIGN(NLMSG_LENGTH(len))

# H2PY_ERR: ./h/linux/netlink.h - macro: def NLMSG_DATA(nlh): return ((void*)(((char*)nlh) + NLMSG_LENGTH(0)))
NLMSG_NOOP = 0x1
NLMSG_ERROR = 0x2
NLMSG_DONE = 0x3
NLMSG_OVERRUN = 0x4
NLMSG_MIN_TYPE = 0x10
NETLINK_ADD_MEMBERSHIP = 1
NETLINK_DROP_MEMBERSHIP = 2
NETLINK_PKTINFO = 3
NETLINK_BROADCAST_ERROR = 4
NETLINK_NO_ENOBUFS = 5
NETLINK_RX_RING = 6
NETLINK_TX_RING = 7
NL_MMAP_STATUS_UNUSED = 0
NL_MMAP_STATUS_RESERVED = 1
NL_MMAP_STATUS_VALID = 2
NL_MMAP_STATUS_COPY = 3
NL_MMAP_STATUS_SKIP = 4
# H2PY_ERR: ./h/linux/netlink.h - define: NL_MMAP_MSG_ALIGNMENT = NLMSG_ALIGNTO
def NL_MMAP_MSG_ALIGN(sz): return __ALIGN_KERNEL(sz, NL_MMAP_MSG_ALIGNMENT)

# H2PY_ERR: ./h/linux/netlink.h - define: NL_MMAP_HDRLEN = NL_MMAP_MSG_ALIGN(sizeof(struct nl_mmap_hdr))
NET_MAJOR = 36
NETLINK_UNCONNECTED =  0
NETLINK_CONNECTED = 1
NLA_F_NESTED = (1 << 15)
NLA_F_NET_BYTEORDER = (1 << 14)
NLA_TYPE_MASK = ~(NLA_F_NESTED | NLA_F_NET_BYTEORDER)
NLA_ALIGNTO = 4
def NLA_ALIGN(len): return (((len) + NLA_ALIGNTO - 1) & ~(NLA_ALIGNTO - 1))

# H2PY_ERR: ./h/linux/netlink.h - define: NLA_HDRLEN = ((int) NLA_ALIGN(sizeof(struct nlattr)))
